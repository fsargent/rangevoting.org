#N.Tideman's statistical election-model for computing Condorcet Winner existence probability.
#Maple program by Warren D. Smith, December 2009.
#Tideman recommends these parameter values:
#  a1 := -0.532 +- 0.028; a2 := -0.789 +- 0.055; a3 := -2.486 +- 0.010; a4 := -1.281 +- 0.011;

#RegHalfBeta := (alpha, beta) -> 
#  integrate( u^(alpha-1) * (1-u)^(beta-1) , u=0..1/2 ) /
#  integrate( u^(alpha-1) * (1-u)^(beta-1) , u=0..1 );
#which when you do the integrals becomes the following:
#RegHalfBeta1 is one close form from HOMF 26.5.23;
#RegHalfBeta2 is a slightly faster close form, according to my timing experiments:
# k=1..20 time=17.84  for RegHalfBeta1, time=15.98  for RegHalfBeta2
# k=1..30 time=143.03 for RegHalfBeta1, time=133.85 for RegHalfBeta2
# k=40,50,60,70 takes about 15 minutes run time using RegHalfBeta2.
# k=30 value=0.7490373553 for RegHalfBeta1, value=0.7490373550 for RegHalfBeta2
# k=10 value=0.9285237812 for RegHalfBeta1, value=0.9285237742 for RegHalfBeta2
# k=3  value=0.9882900824 for RegHalfBeta1, value=0.9882900822 for RegHalfBeta2

RegHalfBeta1 := (alpha, beta) ->
   2^(-alpha)/(alpha*Beta(alpha, beta)) * hypergeom([alpha, 1-beta], [alpha+1], 1/2);

RegHalfBeta2 := (alpha, beta) -> 1-
   2^(-beta)/(beta*Beta(beta, alpha)) * hypergeom([beta, 1-alpha], [beta+1], 1/2);

ProbWin := proc(i, j, k, a1, a2, a3, a4)
local x, y, r, n, p, alpha, beta;
description "probability candidate i loses to j, where 0<i<j<=k";
    x := (j - i)/(k + 1);
    y := 1 - (j + i)/(k + 1);
    r := evalf((1/2)*exp(a1*x + a2*x*x + a3*x*y*y));
    n := evalf((r*((1/2) - r))^a4);
    alpha := evalf(r*n);
    beta := evalf(n - alpha);
    p := evalf(RegHalfBeta2(alpha, beta));
    return( p );
end proc;

ProbCWexists := proc(k, a1, a2, a3, a4)
local i, j, p, s;
description "probability condorcet winner exists for k-candidate election";
    s := 0;
    for j from 1 to k do
        p := 1;
        for i from 1 to j-1 do p := p*   ProbWin(i, j, k, a1, a2, a3, a4);  end do;
        for i from j+1 to k do p := p*(1-ProbWin(j, i, k, a1, a2, a3, a4)); end do;
        s := s + p;
    end do;
    return( s );
end proc;

#compute table and print:
for k from 1 to 30 do
   print( k, ProbCWexists( k,  -0.532,  -0.789,  -2.486,  -1.281) );
end do;
for k from 40 by 10 to 100 do
   print( k, ProbCWexists( k,  -0.532,  -0.789,  -2.486,  -1.281) );
end do;
for k from 200 by 100 to 500 do
   print( k, ProbCWexists( k,  -0.532,  -0.789,  -2.486,  -1.281) );
end do;
quit;

#compute table with error bars and print:
with(stats);
for k from 150 by 50 to 200 do
   tt := [
    ProbCWexists( k, -0.532 + 0.028, -0.789 + 0.055, -2.486 + 0.010, -1.281 + 0.011 ),
    ProbCWexists( k, -0.532 + 0.028, -0.789 + 0.055, -2.486 + 0.010, -1.281 - 0.011 ),
    ProbCWexists( k, -0.532 + 0.028, -0.789 + 0.055, -2.486 - 0.010, -1.281 + 0.011 ),
    ProbCWexists( k, -0.532 + 0.028, -0.789 + 0.055, -2.486 - 0.010, -1.281 - 0.011 ),
    ProbCWexists( k, -0.532 + 0.028, -0.789 - 0.055, -2.486 + 0.010, -1.281 + 0.011 ),
    ProbCWexists( k, -0.532 + 0.028, -0.789 - 0.055, -2.486 + 0.010, -1.281 - 0.011 ),
    ProbCWexists( k, -0.532 + 0.028, -0.789 - 0.055, -2.486 - 0.010, -1.281 + 0.011 ),
    ProbCWexists( k, -0.532 + 0.028, -0.789 - 0.055, -2.486 - 0.010, -1.281 - 0.011 ),
    ProbCWexists( k, -0.532 - 0.028, -0.789 + 0.055, -2.486 + 0.010, -1.281 + 0.011 ),
    ProbCWexists( k, -0.532 - 0.028, -0.789 + 0.055, -2.486 + 0.010, -1.281 - 0.011 ),
    ProbCWexists( k, -0.532 - 0.028, -0.789 + 0.055, -2.486 - 0.010, -1.281 + 0.011 ),
    ProbCWexists( k, -0.532 - 0.028, -0.789 + 0.055, -2.486 - 0.010, -1.281 - 0.011 ),
    ProbCWexists( k, -0.532 - 0.028, -0.789 - 0.055, -2.486 + 0.010, -1.281 + 0.011 ),
    ProbCWexists( k, -0.532 - 0.028, -0.789 - 0.055, -2.486 + 0.010, -1.281 - 0.011 ),
    ProbCWexists( k, -0.532 - 0.028, -0.789 - 0.055, -2.486 - 0.010, -1.281 + 0.011 ),
    ProbCWexists( k, -0.532 - 0.028, -0.789 - 0.055, -2.486 - 0.010, -1.281 - 0.011 )];
    print(k);
    describe[mean](tt);
    describe[standarddeviation](tt);
end do;

#------end of MAPLE program;  now here is some OUTPUT:------
C,  Prob(Condorcet Winner Exists in C-candidate election, infinite #voters, Tideman model)
1,  1
2,  1.000000000
3,  0.9882900822
4,  0.9748959071
5,  0.9648583618
6,  0.9568101798
7,  0.9496298494
8,  0.9426984300
9,  0.9357101189
10,  0.9285237742
11,  0.9210820434
12,  0.9133700949
13,  0.9053945858
14,  0.8971727514
15,  0.8887266352
16,  0.8800799963
17,  0.8712566469
18,  0.8622795708
19,  0.8531704841
20,  0.8439496372
21,  0.8346357628
22,  0.8252460951
23,  0.8157964365
24,  0.8063012426
25,  0.7967737172
26,  0.7872259066
27,  0.7776687941
28,  0.7681123896
29,  0.7585658089
30,  0.7490373550
40,  0.6561162156
50,  0.5701347282
60,  0.4927833349
70,  0.4243160899
80,  0.3643342743
90,  0.3121537138
100, 0.2670204459
200, 0.05589104742
300, 0.01485059262

Note, my numbers above disagree at about 1% error typically to Tideman's numbers 
he sent me in an email.  Sometimes 40% off!  E.g.
C  TIDEMANemail  TIDEMANmyprog
10    .9387       .92852
20    .8591       .84395
30    .7665       .74904
60    .5093       .49278
100   .2779       .26702
200   .0559       .05589
300   .0108       .01485

AND HERE IS A COMPARISON OF MY MAPLE PROGRAM's COMPUTATION OF
TIDEMAN's CONDORCET WINNER EXISTENCE PROBABILITY, VERSUS MY OWN 
CHEESY MODEL's CONDORCET WINNER EXISTENCE PROBABILITY
in C-candidate elections.  Using Tideman's cental estimates of a1,a2,a3,a4.
My(Smith) cheesy formula = (P^C - Q^C)/(P-Q) 
where Q=1-P and I here am using P=0.98709877:
  C TIDEMAN SMITH
  1 1.00000 1.00000
  2 1.00000 1.00000
  3 0.98829 0.98727
  4 0.97490 0.97453
  5 0.96486 0.96196
  6 0.95681 0.94955
  7 0.94963 0.93730
  8 0.94270 0.92520
  9 0.93571 0.91327
 10 0.92852 0.90149
 11 0.92108 0.88986
 12 0.91337 0.87838
 13 0.90539 0.86704
 14 0.89717 0.85586
 15 0.88873 0.84482
 16 0.88008 0.83392
 17 0.87126 0.82316
 18 0.86228 0.81254
 19 0.85317 0.80206
 20 0.84395 0.79171
 21 0.83464 0.78149
 22 0.82525 0.77141
 23 0.81580 0.76146
 24 0.80630 0.75164
 25 0.79677 0.74194
 26 0.78723 0.73237
 27 0.77767 0.72292
 28 0.76811 0.71359
 29 0.75857 0.70439
 30 0.74904 0.69530
 40 0.65612 0.61063
 50 0.57013 0.53627
 60 0.49278 0.47097
 70 0.42432 0.41361
 80 0.36433 0.36325
 90 0.31215 0.31901
100 0.26702 0.28017
200 0.05589 0.07647
300 0.01485 0.02087

AND HERE IS TIDEMAN's CONDORCET WINNER EXISTENCE PROBABILITY
COMPUTED WITH 1 STDDEV ERROR BARS (which are surprisingly narrow)
UNDER THE ASSUMPTION ALL TIDEMAN'S 4 ERROR BARS ON HIS a1,a2,a3,a4
ARE INDEPENDENT:
 C  TIDEMAN+-1SIGMA
 1  1.0000000000 +- 0.0000000000
 2  1.0000000000 +- 0.0000000000
 3  0.9881513238 +- 0.001994394165
 4  0.9746722419 +- 0.003549113867
 5  0.9645768206 +- 0.004620496654
 6  0.9564885975 +- 0.005407542225
 7  0.9492788131 +- 0.006047017500
 8  0.9423242788 +- 0.006614385888
 9  0.9353168500 +- 0.007147770799
10  0.9281141056 +- 0.007665731809
15  0.8882590394 +- 0.01019604600
20  0.8434511869 +- 0.01262449172
25  0.7962656662 +- 0.01484845837
30  0.7485375062 +- 0.01680625596
(above took about 40 minutes)
40  0.6556738400 +- 0.01985794091
50  0.5697865061 +- 0.02181859904
60  0.4925483674 +- 0.02285077960
70  0.4242004911 +- 0.02313931045
80  0.3643351016 +- 0.02285682763
90  0.3122648049 +- 0.02215455082
100 0.2680084049 +- 0.02182221980
---end of file.

